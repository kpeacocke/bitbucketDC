services:
  haproxy:
    image: haproxy:2.9
    container_name: haproxy
    restart: unless-stopped
    ports:
      - "80:80"    # HTTP
      - "443:443"  # Placeholder for future HTTPS
    volumes:
      - ./config/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - bitbucket1
      - bitbucket2
    networks:
      - proxy
      - pgnet
  bitbucket1:
    image: atlassian/bitbucket:9
    container_name: bitbucket1
    restart: unless-stopped
    depends_on:
      pgpool:
        condition: service_healthy
      opensearch-node1:
        condition: service_healthy
      nfs-server:
        condition: service_healthy
    environment:
      - ATL_JDBC_URL=jdbc:postgresql://pgpool:5432/bitbucket
      - ATL_JDBC_USER=bn_bitbucket
      - ATL_JDBC_PASSWORD=bitbucketpass
      - PLUGIN_SEARCH_ELASTICSEARCH_BASEURL=http://opensearch-node1:9200
      - SEARCH_ENABLED=false
      - JVM_MINIMUM_MEMORY=2g
      - JVM_MAXIMUM_MEMORY=4g
    expose:
      - "7990"   # Web
      - "7999"   # SSH
    networks:
      - pgnet         # To reach pgpool
      - opensearchnet # To reach OpenSearch
      - nfsnet        # To reach NFS
    command: >
      sh -c "
        echo 'Waiting for NFS server...';
        apt-get update && apt-get install -y nfs-common;
        mkdir -p /var/atlassian/application-data/bitbucket/shared;
        chown -R bitbucket:bitbucket /var/atlassian/application-data/bitbucket/shared;
        while ! mount -t nfs4 -o vers=4.1,rsize=1048576,wsize=1048576,timeo=600,retrans=2
        nfs-server:/mnt/bitbucket-shared /var/atlassian/application-data/bitbucket/shared; do
          echo 'Retrying mount...';
          sleep 3;
        done;
        echo 'Mounted NFS successfully.';
        exec /entrypoint.py"
  bitbucket2:
    image: atlassian/bitbucket:9
    container_name: bitbucket2
    restart: unless-stopped
    environment:
      - ATL_JDBC_URL=jdbc:postgresql://pgpool:5432/bitbucket
      - ATL_JDBC_USER=bn_bitbucket
      - ATL_JDBC_PASSWORD=bitbucketpass
      - PLUGIN_SEARCH_ELASTICSEARCH_BASEURL=http://opensearch-node1:9200
      - SEARCH_ENABLED=false
      - JVM_MINIMUM_MEMORY=2g
      - JVM_MAXIMUM_MEMORY=4g
    expose:
      - "7990"   # Web
      - "7999"   # SSH
    networks:
      - pgnet         # To reach pgpool
      - opensearchnet # To reach OpenSearch
      - nfsnet        # To reach NFS
    command: >
      sh -c "
        echo 'Waiting for NFS server...';
        apt-get update && apt-get install -y nfs-common;
        mkdir -p /var/atlassian/application-data/bitbucket/shared;
        chown -R bitbucket:bitbucket /var/atlassian/application-data/bitbucket/shared;
        while ! mount -t nfs4 -o vers=4.1,rsize=1048576,wsize=1048576,timeo=600,retrans=2
        nfs-server:/mnt/bitbucket-shared /var/atlassian/application-data/bitbucket/shared; do
          echo 'Retrying mount...';
          sleep 3;
        done;
        echo 'Mounted NFS successfully.';
        exec /entrypoint.py"
  nfs-server:
    image: lihungte96/docker-nfs4:latest
    container_name: nfs-server
    restart: unless-stopped
    volumes:
      - ./config/nfs/exports:/etc/exports
      - nfsdata:/mnt
      - ./config/nfs/init-nfs.sh:/init-nfs.sh
    entrypoint: ["/init-nfs.sh"]
    networks:
      - nfsnet
    expose:
      - "2049/tcp"
      - "2049/udp"
    privileged: true
  postgres_primary:
    image: bitnami/postgresql:17
    container_name: postgres_primary
    restart: unless-stopped
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_USERNAME=bn_bitbucket
      - POSTGRESQL_PASSWORD=bitbucketpass
      - POSTGRESQL_DATABASE=bitbucket
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_pass
    volumes:
      - pg_primary_data:/bitnami/postgresql
      - ./config/postgresql/postgresql.conf:/opt/bitnami/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bn_bitbucket -d bitbucket"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pgnet
  postgres_replica:
    image: bitnami/postgresql:17
    container_name: postgres_replica
    restart: unless-stopped
    depends_on:
      - postgres_primary
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_MASTER_HOST=postgres_primary
      - POSTGRESQL_USERNAME=bn_bitbucket
      - POSTGRESQL_PASSWORD=bitbucketpass
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_pass
    volumes:
      - pg_replica_data:/bitnami/postgresql
      - ./config/postgresql/postgresql.conf:/opt/bitnami/postgresql/postgresql.conf
      - ./config/postgresql/check_replica.sh:/check_replica.sh
    healthcheck:
      test: ["CMD-SHELL", "/check_replica.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pgnet
  pgpool:
    image: bitnami/pgpool:4
    container_name: pgpool
    restart: unless-stopped
    depends_on:
      postgres_primary:
        condition: service_healthy
      postgres_replica:
        condition: service_healthy
    ports:
      - "5432:5432"
    environment:
      - PGPOOL_ADMIN_USERNAME=pgpooladmin
      - PGPOOL_ADMIN_PASSWORD=supersecureadminpass
      - PGPOOL_BACKEND_NODES=0:postgres_primary:5432,1:postgres_replica:5432
      - PGPOOL_SR_CHECK_USER=bn_bitbucket
      - PGPOOL_SR_CHECK_PASSWORD=bitbucketpass
      - PGPOOL_POSTGRES_USERNAME=bn_bitbucket
      - PGPOOL_POSTGRES_PASSWORD=bitbucketpass
    volumes:
      - ./config/postgresql/pgpool.conf:/opt/bitnami/pgpool/conf/pgpool.conf
      - ./config/postgresql/pgpool-health.sh:/pgpool-health.sh
    healthcheck:
      test: ["CMD-SHELL", "/pgpool-health.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - pgnet
  opensearch-node1:
    image: opensearchproject/opensearch:2.18.0
    container_name: opensearch-node1
    environment:
      - cluster.name=bitbucket-opensearch
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node2,opensearch-node3
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2,opensearch-node3
      - bootstrap.memory_lock=false
      - "OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g"
      - plugins.security.disabled=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=@1n5A!AWE@
    volumes:
      - opensearch-node1-data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
    networks:
      - opensearchnet
  opensearch-node2:
    image: opensearchproject/opensearch:2.18.0
    container_name: opensearch-node2
    environment:
      - cluster.name=bitbucket-opensearch
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node3
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2,opensearch-node3
      - bootstrap.memory_lock=false
      - "OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g"
      - plugins.security.disabled=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=@1n5A!AWE@
    volumes:
      - opensearch-node2-data:/usr/share/opensearch/data
    networks:
      - opensearchnet
  opensearch-node3:
    image: opensearchproject/opensearch:2.18.0
    container_name: opensearch-node3
    environment:
      - cluster.name=bitbucket-opensearch
      - node.name=opensearch-node3
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2,opensearch-node3
      - bootstrap.memory_lock=false
      - "OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g"
      - plugins.security.disabled=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=@1n5A!AWE@
    volumes:
      - opensearch-node3-data:/usr/share/opensearch/data
    networks:
      - opensearchnet
volumes:
  nfsdata:
  pg_primary_data:
  pg_replica_data:
  opensearch-node1-data:
  opensearch-node2-data:
  opensearch-node3-data:
  bitbucket_shared:
networks:
  proxy:
    driver: bridge
  nfsnet:
    driver: bridge
    internal: true
  pgnet:
    driver: bridge
    internal: true
  opensearchnet:
    driver: bridge
    internal: true